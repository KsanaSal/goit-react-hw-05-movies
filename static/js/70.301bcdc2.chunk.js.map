{"version":3,"file":"static/js/70.301bcdc2.chunk.js","mappings":"oMAGaA,EAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGH,EAAOI,KAAI,SAAAC,GAAI,OACd,yBACE,SAAC,KAAD,CAAMJ,GAAE,UAAKA,GAAL,OAAUI,EAAKC,IAAMC,MAAO,CAAEC,KAAMN,GAA5C,SACGG,EAAKI,SAFDJ,EAAKC,GADA,KASrB,C,oBCfD,IADgB,kC,oJCGHI,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,MAIlB,E,iBCVcK,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,GAAAA,IAAA,4DACgCC,EAAAA,EADhC,kBACiDF,EADjD,YAF3B,cAEUG,EAFV,yBAMWA,EAASC,MANpB,gCAQIC,QAAQC,MAAR,MARJ,gFAYA,I,EAAA,E,SAZ+B,GAAhBP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCDFQ,EAAOlB,EAAAA,GAAAA,KAAH,sCCsCjB,EAjCe,WAAO,IAAD,EACnB,GAAwCmB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMV,EAAK,UAAGS,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlC,EAAP,KAAemC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,IACV,IAAME,EAAY,mCAAG,6GAEShB,EAAgBC,GAFzB,OAEXgB,EAFW,OAGjBH,EAAUG,EAAYC,SAHL,gDAKjBZ,QAAQa,IAAI,SALK,yDAAH,qDAQdlB,GACFe,GAEH,GAAE,CAACf,IAOJ,OACE,UAACO,EAAD,YACE,SAACd,EAAD,CAAWC,MAAOM,EAAOL,SAPH,SAAAK,GAExBU,EAD6B,KAAVV,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAKItB,IAAU,SAACD,EAAA,EAAD,CAAWE,GAAG,GAAGD,OAAQA,MAGzC,C","sources":["components/MovieList.jsx","data/apiKey.js","components/SearchBox.styled.js","components/SearchBox.jsx","data/getSearchMovies.js","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, to }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(name => (\n        <li key={name.id}>\n          <Link to={`${to}${name.id}`} state={{ from: location }}>\n            {name.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    })\n  ),\n  to: PropTypes.string.isRequired,\n};","const API_KEY = '9c3613c3b537f8ef5b027465b16a3a8b';\nexport default API_KEY;","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import axios from 'axios';\nimport API_KEY from './apiKey';\n\nasync function getSearchMovies(query) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getSearchMovies;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\nwidth: 100%;\n`","import { MovieList } from 'components/MovieList';\nimport { SearchBox } from 'components/SearchBox';\nimport getSearchMovies from 'data/getSearchMovies';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Main } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    setMovies([]);\n    const searchMovies = async () => {\n      try {\n        const fetchMovies = await getSearchMovies(query);\n        setMovies(fetchMovies.results);\n      } catch {\n        console.log('first');\n      }\n    };\n    if (query) {\n      searchMovies();\n    }\n  }, [query]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Main>\n      <SearchBox value={query} onChange={updateQueryString} />\n      {movies && <MovieList to=\"\" movies={movies} />}\n    </Main>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","movies","to","location","useLocation","map","name","id","state","from","title","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","getSearchMovies","query","axios","API_KEY","response","data","console","error","Main","useSearchParams","searchParams","setSearchParams","get","useState","setMovies","useEffect","searchMovies","fetchMovies","results","log"],"sourceRoot":""}