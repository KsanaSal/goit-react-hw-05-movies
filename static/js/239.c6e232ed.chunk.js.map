{"version":3,"file":"static/js/239.c6e232ed.chunk.js","mappings":"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","sources":["data/apiKey.js","data/getMovieById.js","data/getCast.js","data/getReviews.js","components/BackButton.styled.js","components/BackButton.jsx","components/MovieCard.styled.js","components/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["const API_KEY = '9c3613c3b537f8ef5b027465b16a3a8b';\nexport default API_KEY;","import axios from 'axios';\nimport API_KEY from './apiKey';\n\nasync function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&page=1`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovieById;","import axios from 'axios';\nimport API_KEY from './apiKey';\n\nasync function getCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&page=1`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getCast","import axios from 'axios';\nimport API_KEY from './apiKey';\n\nasync function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getReviews","import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 24px;\n  background-color: #FDFDFD;\n  border: 1px solid #F1F1F1;\n  border-radius: 4px;\n  box-shadow: 3px 3px 7px rgba(0, 0, 0, 0.3);\n\n  :hover {\n    color: #FF4500;\n  }\n`;","import { HiArrowLeft } from 'react-icons/hi';\n// import { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n\nimport { StyledLink } from './BackButton.styled';\n\nexport const BackButton = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  width: 100%;\n  padding: 8px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 15px;\n`;\n\nexport const PosterPath = styled.img`\n  width: 300px;\n`;\n\nexport const ContentMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 24px;\n  padding: 8px;\n`;\nexport const TitleMovie = styled.h1`\n  margin: 0;\n  margin-bottom: 20px;\n  font-size: 48px;\n`;\n","import {\n  Container,\n  ContentMovie,\n  PosterPath,\n  TitleMovie,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <Container>\n      <PosterPath\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <ContentMovie>\n        <TitleMovie>{movie.title}</TitleMovie>\n        {/* <span>User score: {movie.vote_average}</span> */}\n        <h2>Overview</h2>\n        <p></p>\n        <h3>Genres</h3>\n        <span></span>\n      </ContentMovie>\n    </Container>\n  );\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieById from 'data/getMovieById';\nimport getCast from 'data/getCast';\nimport getReviews from 'data/getReviews';\nimport { BackButton } from 'components/BackButton';\nimport { MovieCard } from 'components/MovieCard';\nimport { Main } from 'components/MovieCard.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  console.log(movie);\n  console.log(cast);\n  console.log(reviews);\n\n  useEffect(() => {\n    const movieDetail = async () => {\n      try {\n        const fetchMovies = await getMovieById(id);\n        console.log(fetchMovies);\n        setMovie(fetchMovies);\n      } catch {\n        console.log('first');\n      }\n    };\n\n    const movieCast = async () => {\n      try {\n        const fetchMovies = await getCast(id);\n        console.log(fetchMovies);\n        setCast(fetchMovies);\n      } catch {\n        console.log('first');\n      }\n    };\n\n    const movieReviews = async () => {\n      try {\n        const fetchMovies = await getReviews(id);\n        console.log(fetchMovies);\n        setReviews(fetchMovies);\n      } catch {\n        console.log('first');\n      }\n    };\n    movieDetail();\n    movieCast();\n    movieReviews();\n  }, [id]);\n  return (\n    <Main>\n      <BackButton to={backLinkHref}>Go back</BackButton>\n      <MovieCard movie={movie} />\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieById","id","axios","API_KEY","response","data","console","error","getCast","getReviews","StyledLink","styled","Link","BackButton","to","children","size","Main","Container","PosterPath","ContentMovie","TitleMovie","MovieCard","movie","src","poster_path","alt","title","useParams","useState","setMovie","cast","setCast","reviews","setReviews","backLinkHref","useLocation","state","from","log","useEffect","movieDetail","fetchMovies","movieCast","movieReviews"],"sourceRoot":""}